name: Reusable backend build workflow

on:
  workflow_call:
    inputs:
      pom-project:
        required: true
        type: string

    outputs:
      artifact-name:
        description: "Name of the produced artifact jar"
        value: ${{ jobs.build-backend.outputs.artifact-name }}
jobs:
  build-backend:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      artifact-name: ${{ steps.set-output.outputs.artifact-name }}
    steps:
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Download ARX
        run: curl  https://github.com/arx-deidentifier/arx/releases/download/v3.9.0/libarx-3.9.0.jar -OL
      - name: Register ARX
        run: >
          mvn install:install-file
          -Dfile=./libarx-3.9.0.jar
          -DgroupId=de.deidentifier
          -DartifactId=arx
          -Dversion=3.9.0
          -Dpackaging=jar
          -DgeneratePom=true
      - name: Build Backend
        run: mvn -T 1C package -pl ${{ inputs.pom-project }} -DskipTests -am
      - name: Set artifact name
        run: echo "artifactName=backend-jar-${{ env.GITHUB_SHA }}" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifactName }}
          path: ./${{ inputs.pom-project }}/target/${{ inputs.pom-project }}*.jar
          retention-days: 1
      - name: Set output
        id: set-output
        run: echo "::set-output name=artifact-name::${{ env.artifactName }}"