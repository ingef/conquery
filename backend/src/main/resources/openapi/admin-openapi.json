{
	"swagger": "2.0",
	"info": {
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
		"version": "1.0.7",
		"title": "Swagger Petstore",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "petstore.swagger.io",
	"basePath": "/admin",
	"tags": [
		{
			"name": "config",
			"description": "Operations about configuration"
		}
	],
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/config/plugins/form-backend": {
			"post": {
				"tags": [
					"plugin"
				],
				"summary": "adds a form backend config",
				"description": "",
				"operationId": "addPlugin",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "pluginConfig",
						"schema": {
							"$ref": "#/definitions/FormBackendConfig"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					}
				},
				"security": [
					{
						"api_key": [
							"write:pets",
							"read:pets"
						]
					}
				]
			}
		}
	},
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "api_key",
			"in": "header"
		}
	},
	"definitions": {
		"ApiResponse": {
			"type": "object",
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"Test": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer",
					"format": "int64"
				},
				"name": {
					"type": "string"
				}
			}
		},
		"FormBackendConfig": {
			"type": "object",
			"x-discriminator-value": "type",
			"properties": {
				"type": {
					"type": "string"
				}
			},
			"required": [
				"type"
			]
		}
	}
}